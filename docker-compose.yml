# Compose V2 (version 키 생략)

services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    image: team2/api:dev
    container_name: team2_web
    env_file: .env.prod
    environment:
      IN_DOCKER: "1"
      DJANGO_SETTINGS_MODULE: team2_final.settings
      DJANGO_TIME_ZONE: "${TIME_ZONE:-Asia/Seoul}"
      DJANGO_DEBUG: "${DJANGO_DEBUG:-False}"
      GUNICORN_CMD_ARGS: >
        --bind=0.0.0.0:8000
        --workers=2
        --threads=2
        --timeout=60
        --keep-alive=15
        --chdir=/app
        --access-logfile=-
    command: >
      bash -lc "
        python manage.py migrate --noinput &&
        python manage.py collectstatic --noinput &&
        exec gunicorn team2_final.wsgi:application
      "
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://127.0.0.1:8000/healthz || exit 1"]
      interval: 10s
      timeout: 3s
      retries: 6
      start_period: 45s
    restart: unless-stopped

  nginx:
    image: nginx:1.27
    container_name: team2_nginx
    depends_on:
      api:
        condition: service_healthy
    ports:
      - "80:80"
    volumes:
      - ./deploy/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://127.0.0.1/healthz || wget -qO- http://127.0.0.1/healthz >/dev/null || exit 1"]
      interval: 10s
      timeout: 3s
      retries: 6
      start_period: 10s
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:latest
    container_name: team2_final_prom
    depends_on:
      api:
        condition: service_healthy
    ports:
      - "9090:9090"
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--web.enable-lifecycle"            # 핫 리로드 지원
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./alerts:/etc/prometheus/rules:ro   # 알림 룰 마운트
    restart: unless-stopped

  alertmanager:
    image: prom/alertmanager:latest
    container_name: alertmanager
    env_file: .env.prod                     # SLACK/DISCORD Webhook 등 환경변수 주입
    command:
      - "--config.file=/etc/alertmanager/alertmanager.yml"
      - "--storage.path=/alertmanager"
    volumes:
      - ./alertmanager/alertmanager.yml:/etc/alertmanager/alertmanager.yml:ro
      - alertmanager-data:/alertmanager
    ports:
      - "9093:9093"
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    depends_on:
      - prometheus
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: admin1234
    volumes:
      - grafana-data:/var/lib/grafana
    restart: unless-stopped

  blackbox:
    image: prom/blackbox-exporter:latest
    container_name: blackbox
    ports:
      - "9115:9115"
    volumes:
      - ./blackbox.yml:/etc/blackbox_exporter/config.yml:ro
    restart: unless-stopped

volumes:
  grafana-data:
  alertmanager-data:
