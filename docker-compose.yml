services:
  web:
    build: .
    container_name: team2_final_web
    ports:
      - "8000:8000"
    environment:
      DJANGO_ALLOWED_HOSTS: "localhost,127.0.0.1,0.0.0.0,host.docker.internal"
      DJANGO_DEBUG: "False"          # 배포형이면 False 권장
      DJANGO_TIME_ZONE: "Asia/Seoul"
      DB_ENGINE: "postgres"
      POSTGRES_DB: "team2_final"
      POSTGRES_USER: "team2_user"
      POSTGRES_PASSWORD: "supersecret"
      POSTGRES_HOST: "db"
      POSTGRES_PORT: "5432"
      DJANGO_SETTINGS_MODULE: "team2_final.settings"
      DJANGO_SECRET_KEY: "wLfHydVT0ct0BOkofS6xFwD3uh8tSIV3PxvSAbwFk_2mkRx6J3qUUav2Ji3yEiXkPuVWo9Ud3y6EgHuWIC1kVg"
    volumes:
      - .:/app
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    command: >
      sh -c "python manage.py collectstatic --noinput && python manage.py migrate &&
             gunicorn team2_final.wsgi:application -b 0.0.0.0:8000 --workers 3 --threads 2 --timeout 60 --chdir /app"

  db:
    image: postgres:16
    container_name: team2_final_db
    environment:
      POSTGRES_DB: team2_final
      POSTGRES_USER: team2_user
      POSTGRES_PASSWORD: supersecret
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U team2_user -d team2_final"]
      interval: 5s
      timeout: 3s
      retries: 10
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:latest
    container_name: team2_final_prom
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
    depends_on:
      - web
    restart: unless-stopped

volumes:
  pgdata:
